nameOverride: {{cookiecutter.artifact_id}}
fullnameOverride: {{cookiecutter.artifact_id}}
# use command line parameter in pipeline to keep it dynamic per build
#appVersion: someVersionForApplication

image:
  repository: 'twgorg/{{cookiecutter.artifact_id}}'
  # tag: use appVersion

replicaCount: 1

podAnnotations:
  co.elastic.logs/enabled: 'true'
  # product group in elasticsearch to provide same lifecycle policies and patterns
  twg.elastic.logs/product: "{{cookiecutter.prefix}}"

podLabels:
  metrics: prometheus
  prometheus.io/scrape: "true"

extraEnvs:
  - name: ENV
    value: dev

ingress:
  host: '{{cookiecutter.prefix}}-dev-aks.twg.co.nz'
  prefix: '/{{cookiecutter.artifact_id}}'
  stripPrefix: true
  tls:
    enabled: true

resources:
  limits:
    memory: '512Mi'
    cpu: '400m'
  requests:
    memory: '256Mi'
    cpu: '250m'

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

configmap:
  enabled: false

metrics:
  enabled: true

livenessProbe:
  enabled: true
  override:
    httpGet:
      path: /health/liveness
      port: 8050
    failureThreshold: 5
    initialDelaySeconds: 180
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
readinessProbe:
  enabled: true
  override:
    httpGet:
      path: /health/readiness
      port: 8050
    failureThreshold: 5
    initialDelaySeconds: 180
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

service:
  type: ClusterIP
  port: 80

nodeSelector: {}

tolerations: []

affinity: {}

chartTest:
  enabled: false

actuator:
  enabled: true

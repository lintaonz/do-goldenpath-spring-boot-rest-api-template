# This example was copied from https://github.com/OAI/OpenAPI-Specification/blob/master/examples/v3.0/petstore.yaml
# altered to reference sdem schemas
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://localhost:8080/api
  - url: https://{{cookiecutter.prefix}}-dev-aks.twg.co.nz/{{cookiecutter.artifact_id}}/api
  - url: https://{{cookiecutter.prefix}}-test-aks.twg.co.nz/{{cookiecutter.artifact_id}}/api
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pets-v1"
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error-v1"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pet-v1"
      responses:
        '200':
          description: >
            The response mirrors the input payload with some
            adjustments to the data enroute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pet-v1"
        '201':
          description: Null response
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error-v1"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pet-v1"
        '404':
          description: not found error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error-v1"
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error-v1"

components:
  schemas:
    error-v1:
      title: ErrorV1
      type: object
      required:
        - 'code'
        - 'message'
      properties:
        code:
          type: integer
        message:
          type: string
    pet-v1:
      title: PetV1
      type: object
      properties:
        id:
          type: integer
          description: "The Id"
        name:
          type: string
          description: "The name of the pet"
        tagEncrypted:
          type: string
          description: "The tag of the pet"
          pattern: "^[A-Za-z0-9+/=:]+$"
          x-twg-encryption-key: "getting-started"
          x-twg-clear:
            type: string
            pattern: "^[A-Z0-9-]+$"
            minLength: 6
        dateOfBirth:
          type: string
          format: date-time
          description: "The birth date of the pet"
        microchipDate:
          type: string
          format: date
          description: "The microchip date of the pet"
        costPerDayEncrypted:
          type: string
          pattern: "^[A-Za-z0-9+/=:]+$"
          description: "The cost per day for the pet"
          x-twg-encryption-key: "getting-started"
          x-twg-clear:
            type: number
            minimum: 1
            maximum: 100
            exclusiveMinimum: true
    pets-v1:
      title: PetsV1
      type: array
      items:
        $ref: "#/components/schemas/pet-v1"
